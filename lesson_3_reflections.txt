When would you want to use a remote repository rather than keeping all your work local?

Whenever I work from more than one computer.
And when I want to share my work (code) with other people, allow them to download it, make changes, commit it and push to my repository.
For example, when I work together with other people in a company.
Or when I work from home PC and from work PC at the same time and want to sync changes.
Its also possible to use GitHub as a backup for my private projects (but, sadly, that feature is not free, comes with monthly subscription).

---------------

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I may want to commit my changes into a branch before pulling changes from remote depository rather than having Git stay up-to-date automatically.
I may also want to work on my local version and make changes and push them before pulling other branches from the remote.
Or I may end up in conflict when Git auto-syncs my local and remote versions of files, so I'll get stuck and won't be able to work till I fix merge conflicts.
In short, its typically more "safe" to push/pull when I feel ready rather than automatically. Same as committing.

---------------

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork - used in GitHub when you want to make a copy of someone's git project (copy commit history and current condition).
Clone - used when you want to make a local copy of remote git project.
Branch - used locally when you want to make experimental changes you don't plan to add just yet to master branch of the project. Branches can be considered private commits, and they can be added to Master at a later time.

Use Fork when making a copy of someone's git project for your own purposes (build upon or make changes).
Use Clone when you want to make a copy of a remote commit (your own or someone else's).
Use Branch for experimental changes, like bug fixing or adding new features.

---------------


---------------
